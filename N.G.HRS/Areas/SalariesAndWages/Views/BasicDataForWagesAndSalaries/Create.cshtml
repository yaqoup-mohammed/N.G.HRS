@model N.G.HRS.Areas.AalariesAndWages.Models.BasicDataForWagesAndSalaries
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Employee";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Active"] = "AddEmployee";
    ViewData["Open"] = "Open2";
    ViewData["OpenOperation"] = "OpenOperation2";
}

@* ============================ *@
<nav class="page-breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="../../../dashboard.html"> الرئيسة</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">
            تهيئة النظام
        </li>
        <li class="breadcrumb-item active" aria-current="page">
            التهيئة العامة
        </li>
        <li class="breadcrumb-item active" aria-current="page">
            الاجور والمرتبات
        </li>
        <li class="breadcrumb-item active" aria-current="page">
            <a asp-action="Index">بيانات الاساسية  للعمل  والاجر</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">
        </li>
    </ol>
</nav>

<div class="row">
    <div class="col-md-12 stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">  بيانات الاساسية  للعمل والاجر  </h4>
                <br />
                <hr />
                <form asp-action="Create" id="BasicDataForWagesAndSalariesForm" >
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>  
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="col mb-3">
                                <label asp-for="FromDate" class="form-label"> من تاريخ</label>
                                <div class="input-group flatpickr flatpickr-date" id="flatpickr-date">
                                    <input asp-for="FromDate" id="FromDate" class="form-control" placeholder="أختر التاريخ" data-input />
                                    <span class="input-group-text input-group-addon" data-toggle>
                                        <i data-feather="calendar"></i>
                                    </span>
                                </div>
                                <span asp-validation-for="FromDate" class="text-danger"></span>

                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="col mb-3">
                                <label asp-for="ToDate" class="form-label"> الى تاريخ</label>
                                <div class="input-group flatpickr flatpickr-date" id="flatpickr-date">
                                    <input asp-for="ToDate" id="ToDate1" class="form-control" placeholder="أختر التاريخ" data-input />
                                    <span class="input-group-text input-group-addon" data-toggle>
                                        <i data-feather="calendar"></i>
                                    </span>
                                </div>
                                <span asp-validation-for="ToDate" class="text-danger"></span>

                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="mb-3">
                                <label asp-for="NumberOfMonthsDays" class="form-label"> عددأيام الشهر </label>
                                <input asp-for="NumberOfMonthsDays" id="NumberOfMonthsDays" class="form-control" pattern="\d*" title="يرجى إدخال أرقام فقط" oninput="validateNumberInput(this)" /> 
                            </div>
                            <span asp-validation-for="NumberOfMonthsDays" class="text-danger"></span>
                        </div>
                    </div><!-- Row -->
                   

                    <div class="row">
                        <div class="col-sm-4">
                            <div class="mb-3">
                                <label asp-for="AbsencePerHour" class="form-label"> الغياب باساعة</label>
                                <input asp-for="AbsencePerHour" id="AbsencePerHour1" class="form-control" pattern="\d*" title="يرجى إدخال أرقام فقط" oninput="validateNumberInput(this)" /> 
                                <span asp-validation-for="AbsencePerHour" class="text-danger"></span>
                            </div>
                        </div>
                        <!-- Col -->
                        <div class="col-sm-4">
                            <div class="mb-3">
                                <label asp-for="DelayPerHour" class="form-label"> التأخير  باساعة </label>
                                <input asp-for="DelayPerHour" id="DelayPerHour1" class="form-control" pattern="\d*" title="يرجى إدخال أرقام فقط" oninput="validateNumberInput(this)" /> 
                                <span asp-validation-for="DelayPerHour" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="mb-3">
                                <label asp-for="OneFingerPrintPerHourDelay" class="form-label">تأخير البصمة الواحدة بالساعة</label>
                                <input asp-for="OneFingerPrintPerHourDelay" id="OneFingerPrintPerHourDelay1" class="form-control" pattern="\d*" title="يرجى إدخال أرقام فقط" oninput="validateNumberInput(this)" /> 
                                <span asp-validation-for="OneFingerPrintPerHourDelay" class="text-danger"></span>
                            </div>
                        </div>
                        <!-- Col -->
                    </div>

                    <div class="row">
                        <!-- Col -->
                        <div class="col-sm-12">
                            <div class="mb-12">
                                <label asp-for="Notes" class="form-label"></label>
                                <input asp-for="Notes" class="form-control" />
                                <span asp-validation-for="Notes" class="text-danger"></span>
                            </div>
                        </div>

                    </div>

                    <button type="submit" id="BasicDataForWagesAndSalariesForm" class="btn btn-primary routate">حفظ</button>
                    <a asp-action="Index" class="btn btn-light">Back to List</a>

                </form>

            </div>
        </div>
    </div>
</div>
@section Scripts {
   
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        //لا يدخل الا ارقام فقط
        function validateNumberInput(input) {
            input.value = input.value.replace(/[^0-9]/g, '');
        }
    </script>


         <script>

        $(document).ready(function () {
            var v = new ValidationFromMe();

            function showErrorMessage(message) {
                Swal.fire({
                    icon: "error",
                    title: message,
                });
            }


            // تعيين تاريخ اليوم في حقل Date و FromDate عند تحميل الصفحة
            const fromDate1 = new Date().toISOString().split('T')[0];
            $("#FromDate").val(fromDate1);
          



            // التحقق من حقل عدد أيام الشهر مباشرة عند الإدخال
            $("#NumberOfMonthsDays").on('input', function () {
                var numberOfMonthsDays = $(this).val();
                if (parseInt(numberOfMonthsDays) > 31 || parseInt(numberOfMonthsDays) === 0) {
                    showErrorMessage(parseInt(numberOfMonthsDays) === 0 ? "الصفر غير مقبول!" : "عدد أيام الشهر يجب ألا يزيد عن 31 يومًا!");
                    $(this).val(''); // إعادة تعيين الحقل
                }
            });
            // التحقق من حقل عدد أيام الشهر مباشرة عند الإدخال
            $("#FromDate, #ToDate1").on('input', function () {
                var fromDate = new Date($("#FromDate").val());
                var toDate1 = new Date($("#ToDate1").val());

                if (toDate1 <= fromDate) {
                    v.softErrorMessage("تاريخ النهاية يجب أن يكون أكبر من تاريخ البداية");

                    // يمكنك أيضاً منع المستخدم من إدخال تاريخ النهاية غير صحيح بإعادة تعيين الحقل
                    $("#FromDate").val('');
                }
            });

            // التحقق من الحقول الأخرى مباشرة عند الإدخال
            $("#AbsencePerHour1, #DelayPerHour1, #OneFingerPrintPerHourDelay1").on('input', function () {
                var value = $(this).val();
                if (parseInt(value) > 10 || parseInt(value) === 0) {
                    showErrorMessage(parseInt(value) === 0 ? "الصفر غير مقبول!" : "القيمة يجب ألا تزيد عن 10 ساعات!");
                    $(this).val(''); // إعادة تعيين الحقل
                }
            });

            // التحقق من الحقول عند محاولة إرسال النموذج
            $("#BasicDataForWagesAndSalariesForm").submit(function (event) {
                event.preventDefault();

                var fromDate = $("#FromDate").val();
                var toDate1 = $("#ToDate1").val();
                var numberOfMonthsDays = $("#NumberOfMonthsDays").val();
                var absencePerHour1 = $("#AbsencePerHour1").val();
                var delayPerHour1 = $("#DelayPerHour1").val();
                var oneFingerPrintPerHourDelay1 = $("#OneFingerPrintPerHourDelay1").val();

                // تحقق من جميع الحقول قبل إرسال الطلب
                if (!fromDate) {
                    showErrorMessage("الرجاء اختيار من تاريخ!");
                    return;
                } else if (!toDate1) {
                    showErrorMessage("الرجاء اختيار إلى تاريخ!");
                    return;
               

                } else if (!numberOfMonthsDays) {
                    showErrorMessage("الرجاء اختيار عدد أيام الشهر!");
                    return;
                } else if (parseInt(numberOfMonthsDays) > 31 || parseInt(numberOfMonthsDays) === 0) {
                    showErrorMessage(parseInt(numberOfMonthsDays) === 0 ? "الصفر غير مقبول!" : "عدد أيام الشهر يجب ألا يزيد عن 31 يومًا!");
                    return;
                } else if (!absencePerHour1) {
                    showErrorMessage("الرجاء اختيار الغياب بالساعة!");
                    return;
                } else if (parseInt(absencePerHour1) > 10 || parseInt(absencePerHour1) === 0) {
                    showErrorMessage(parseInt(absencePerHour1) === 0 ? "الصفر غير مقبول!" : "القيمة يجب ألا تزيد عن 10 ساعات!");
                    return;
                } else if (!delayPerHour1) {
                    showErrorMessage("الرجاء اختيار التأخير بالساعة!");
                    return;
                } else if (parseInt(delayPerHour1) > 10 || parseInt(delayPerHour1) === 0) {
                    showErrorMessage(parseInt(delayPerHour1) === 0 ? "الصفر غير مقبول!" : "القيمة يجب ألا تزيد عن 10 ساعات!");
                    return;
                } else if (!oneFingerPrintPerHourDelay1) {
                    showErrorMessage("الرجاء اختيار تأخير البصمة الواحدة بالساعة!");
                    return;
                } else if (parseInt(oneFingerPrintPerHourDelay1) > 10 || parseInt(oneFingerPrintPerHourDelay1) === 0) {
                    showErrorMessage(parseInt(oneFingerPrintPerHourDelay1) === 0 ? "الصفر غير مقبول!" : "القيمة يجب ألا تزيد عن 10 ساعات!");
                    return;
                }

                // إرسال الطلب إلى الخادم
                $.ajax({
                    url: "/SalariesAndWages/BasicDataForWagesAndSalaries/Check",
                    type: "GET",
                    data: { from: fromDate, to: toDate1, month: numberOfMonthsDays, apcent: absencePerHour1, late: delayPerHour1, fapcent: oneFingerPrintPerHourDelay1 },
                    dataType: "json",
                    success: function (data) {
                        switch (data) {
                            case 1:
                                v.softErrorMessage("هذا الإعداد موجود مسبقا!!");

                            break;
                            case 2:
                                v.softErrorMessage("اعداد التاريخ هذا موجود مسبقا!!");

                                break;
                            case 3:
                                v.softErrorMessage("تاريخ البداية يتداخل مع تاريخ اعداد آخر!!");
                                break;
                            case 4:
                                v.softErrorMessage("تاريخ النهاية يتداخل مع تاريخ اعداد آخر!!");
                                break;
                            case 5:
                                v.softErrorMessage("تاريخ هذا الاعداد يتداخل مع تاريخ اعداد آخر!!");

                                break;
                            default:
                                $("#BasicDataForWagesAndSalariesForm")[0].submit(); // إذا لم يكن هناك أي خطأ، أرسل النموذج
                                return;
                        }
                        // منع إرسال النموذج في حالة وجود خطأ
                        return;
                    },
                    error: function (xhr, status, error) {
                        showErrorMessage("حدث خطأ أثناء معالجة الطلب. حاول مرة أخرى.");
                    }
                });
            });
        });


 </script>
}
