@model N.G.HRS.Areas.AttendanceAndDeparture.ViewModels.PermanenceModelsAndPeriodsVM
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "نماذج الدوام";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Active"] = "AddEmployee";
    ViewData["Open"] = "Open2";
    ViewData["OpenOperation"] = "OpenOperation2";
}

<div class="row rowmargin">
    <div class="col-md-12 stretch-card">
        <div class="card">
            <div class="card-body">
                <h6 class="card-title headerStyle">نماذج الدوام</h6>
                <br />
                <br />
                <br />
                <hr style="color: black" />
                <br />

                <!-- Row -->
                <form asp-action="Create" method="post">
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row">
@*                         <div class="col-sm-6" style="display: none">
                            <div class="mb-3">
                                <label asp-for="permanenceModels.Id"  class="control-label"></label>
                                <input asp-for="permanenceModels.Id" id="permananceId"
                                       class="form-control" />
                            </div>
                        </div>      *@                  
                        <div class="col-sm-6">
                            <div class="mb-3">
                                <label asp-for="permanenceModels.PermanenceName" class="control-label"></label>
                                <input asp-for="permanenceModels.PermanenceName" id="PermanenceName" class="form-control" />
                                <span asp-validation-for="permanenceModels.PermanenceName" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="mb-3">

                                <label asp-for="permanenceModels.FromDate" class="control-label"></label>
                                <input asp-for="permanenceModels.FromDate" class="form-control" />
                                <span asp-validation-for="permanenceModels.FromDate" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="mb-3">

                                <label asp-for="permanenceModels.ToDate" class="control-label"></label>
                                <input asp-for="permanenceModels.ToDate" id="ToDate" class="form-control" />
                                <span asp-validation-for="permanenceModels.ToDate" class="text-danger"></span>
                            </div>
                        </div>
                        <!-- Col -->
                        <!-- <div class="col-sm-2">
                            <div class="mb-3">
                                <input type="button" value="إيقاف" class="form-control"
                                    placeholder="إيقاف" style="background-color: red; color: black; border: solid 1px black; font-weight: bold; " />
                            </div>
                        </div> -->
                        <!-- Col -->
                    </div>
                    <div class="row">
                        <div class="col-sm-2">
                            <div class="mb-3 form-group form-check">

                                <label class="form-check-label">
                                    <input class="form-check-input" id="flexbleCheckbox" name="radiobutton"
                                           asp-for="permanenceModels.FlexibleWorkingHours" /> @Html.DisplayNameFor(model =>
                                    model.permanenceModels.FlexibleWorkingHours)
                                </label>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="mb-3 form-group form-check">

                                <label class="form-check-label">
                                    <input class="form-check-input" id="myCheckbox" name="radiobutton"
                                           asp-for="permanenceModels.WorkBetweenTwoShifts" /> @Html.DisplayNameFor(model =>
                                    model.permanenceModels.WorkBetweenTwoShifts)
                                </label>
                            </div>
                        </div>
                        <!-- Col -->
                        <div class="col-sm-3">
                            <div class="mb-3" id="nFromTime">
                                <label asp-for="permanenceModels.FromTime" class="control-label"></label>
                                <input asp-for="permanenceModels.FromTime" id="nnFromTime" class="form-control" />
                                <span asp-validation-for="permanenceModels.FromTime" class="text-danger"></span>
                            </div>

                        </div>
                        <!-- Col -->
                        <div class="col-sm-3">
                            <div class="mb-3" id="nToTime">
                                <label asp-for="permanenceModels.ToTime" class="control-label"></label>
                                <input asp-for="permanenceModels.ToTime" id="nnToTime" class="form-control" />
                                <span asp-validation-for="permanenceModels.ToTime" class="text-danger"></span>
                            </div>
                        </div>
                        <!-- Col -->
                        <div class="col-sm-2">
                            <div class="mb-3" id="nHours">
                                <label asp-for="permanenceModels.HoursOfWorks" class="control-label"></label>
                                <input asp-for="permanenceModels.HoursOfWorks" id="nnHours" 
                                       style="background-color: #00000005;cursor:context-menu" class="form-control" />
                                <span asp-validation-for="permanenceModels.HoursOfWorks" class="text-danger"></span>
                            </div>
                        </div>
                        <!-- Col -->
                    </div>
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="mb-3 form-group form-check">
                                <label class="form-check-label">
                                    اضافة سماحية حضور وانصراف
                                    <input type="checkbox" id="AttendanceCheckbox" class="form-check" />
                                </label>
                            </div>
                        </div>
                        <!-- Col -->
                        <!-- Col -->
                        <div class="col-sm-4">
                            <div class="mb-3">
                                <label class="form-label">حضور متأخر</label>
                                <input type="number" id="lateAttendance" readonly class="form-control"
                                       placeholder="Enter email" />
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="mb-3">
                                <label class="form-label">انصراف مبكر</label>
                                <input type="number" id="earlyAttendance" readonly class="form-control"
                                       placeholder="Enter email" />
                            </div>
                        </div>
                        <!-- Col -->
                    </div>
                    <!-- Row -->
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="mb-3">
                                <label asp-for="permanenceModels.Notes" class="control-label"></label>
                                <input asp-for="permanenceModels.Notes" class="form-control" />
                                <span asp-validation-for="permanenceModels.Notes" class="text-danger"></span>
                            </div>
                        </div>
                        <!-- Col -->
                    </div>
                    <!-- Row -->
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                    <br />
                </form>
                <div class="form-group">
                    <span>
                        <a asp-action="Index">Back to List</a>
                    </span>
                    <span>
                        <button id="openFormButton" type="button" class="btn btn-primary">اضفة فترة</button>
                    </span>

                </div>

            </div>
            <!-- ================================================================= -->
            <div id="openForm" style="display: none">
                <div id="form" class="row rowmargin">
                    <div class="col-md-12 stretch-card">
                        <div class="card">
                            <button id="closeFormButton" style="right: 10px; top:0px;width: 50px" type="button" class="btn btn-primary"><i data-feather="x"></i></button>

                            <div class="card-body">
                                <!--  -->
                                <div class="card-body">
                                    <h6 class="card-title"
                                        style="width:60px;  padding-bottom:3px; border-bottom:1px solid black;">
                                        الفترات
                                    </h6>


                                    <!--  -->
                                    <form asp-action="CreatePeriods" method="post">

                                        <div class="row">
                                            <div class="col-sm-6">
                                                <div class="mb-3">
                                                    <label asp-for="periods.PermanenceModelsId" class="control-label"></label>
                                                    <select asp-for="periods.PermanenceModelsId" id="periodPermanenceModelsId" asp-items="@(ViewData["permanance"] as SelectList)" id="periodPermanenceModelsId" class="form-control">
                                                        <option value="">-- أختر الدوام --</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-sm-4">
                                                <div class="mb-3">
                                                    <label asp-for="periods.PeriodsName" class="control-label"></label>
                                                    <input asp-for="periods.PeriodsName"  id="PeriodsName" class="form-control" />
                                                    <span asp-validation-for="periods.PeriodsName" class="text-danger"></span>
                                                </div>
                                            </div>
                                            
                                        </div>

                                        <!-- Col -->
                                        <!-- Row -->
                                        <div class="row">
                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="saturday"
                                                               asp-for="periods.Saturday" />
                                                        @Html.DisplayNameFor(model => model.periods.Saturday)
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="sunday"
                                                               asp-for="periods.SunDay" />
                                                        @Html.DisplayNameFor(model => model.periods.SunDay)
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="monday"
                                                               asp-for="periods.Monday" />
                                                        @Html.DisplayNameFor(model => model.periods.Monday)
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="tuesday"
                                                               asp-for="periods.Tuesday" />
                                                        @Html.DisplayNameFor(model => model.periods.Tuesday)
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="wednesday"
                                                               asp-for="periods.Wednesday" />
                                                        @Html.DisplayNameFor(model => model.periods.Wednesday)
                                                    </label>
                                                </div>
                                            </div>

                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="tuesday"
                                                               asp-for="periods.Thursday" />
                                                        @Html.DisplayNameFor(model => model.periods.Thursday)
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-2 stretch-card">
                                                <div class="form-check form-check-inline">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" id="friday"
                                                               asp-for="periods.Friday" />
                                                        @Html.DisplayNameFor(model => model.periods.Friday)
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <br>
                                        <div class="row">

                                            <div class="col-sm-3">
                                                <div class="mb-3">

                                                    <label asp-for="periods.FromTime" class="control-label"></label>
                                                    <input asp-for="periods.FromTime" id="startTime"
                                                           class="form-control" />
                                                    <span asp-validation-for="periods.FromTime"
                                                          class="text-danger"></span>
                                                </div>

                                            </div>
                                            <div class="col-sm-3">
                                                <div class="mb-3">

                                                    <label asp-for="periods.ToTime" class="control-label"></label>
                                                    <input asp-for="periods.ToTime" id="endTime" class="form-control" />
                                                    <span asp-validation-for="periods.ToTime"
                                                          class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="mb-3">
                                                    <label asp-for="periods.Hours" class="control-label"></label>
                                                    <input asp-for="periods.Hours" id="hours"
                                                           style="background-color: #00000005;cursor:context-menu" readonly
                                                           class="form-control" />
                                                    <span asp-validation-for="periods.Hours" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="mb-3">
                                                    <label asp-for="periods.Muinutes" class="control-label"></label>
                                                    <input asp-for="periods.Muinutes"
                                                           style="background-color: #00000005;cursor:context-menu" readonly
                                                           id="minutes" class="form-control" />
                                                    <span asp-validation-for="periods.Muinutes"
                                                          class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
@*                                             <button type="button" id="addButton" class="btn btn-primary">اضافة</button>
 *@                                            <input type="submit" id="submitButton" value="انهاء"
                                                   class="btn btn-primary" />
                                        </div>

                                    </form>
                                    <!-- Row -->
                                    <br />
                                    

                                <!--  -->
                            </div>
                        </div>
                            <div id="table" class="row" style="display: none">
                                <div class="col-md-12 grid-margin stretch-card">
                                    <div class="card">
                                        <div class="card-body">
                                            <h6 class="card-title headerStyle">الفترات</h6>
                                            <div class="table-responsive">
                                                <table class="table">
                                                    <thead>
                                                        <tr>
                                                            <th>الدوام</th>
                                                            <th>الفترات</th>
                                                            <th>من وقت</th>
                                                            <th>الى وقت</th>
                                                            <th>السبت</th>
                                                            <th>الاحد</th>
                                                            <th>الاثنين</th>
                                                            <th>الثلاثاء</th>
                                                            <th>الاربعاء</th>
                                                            <th>الخميس</th>
                                                            <th>الجمعة</th>
                                                            <th>الساعات</th>
                                                            <th>الدقائق</th>
                                                            <th>#</th>

                                                        </tr>
                                                    </thead>
                                                    <tbody id="temporaryTable">
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>


                @* ===================================================== *@


                @section Scripts {
                    @{
                        await Html.RenderPartialAsync("_ValidationScriptsPartial");
                    }
                    <script>

                        //========================================================================================================
                        function calculateTimeDifference() 
                        {
                            const startTimeInput = document.getElementById("startTime");
                            const endTimeInput = document.getElementById("endTime");
                            const hoursInput = document.getElementById("hours");
                            const minutesInput = document.getElementById("minutes");

                            if (!startTimeInput || !endTimeInput || !hoursInput || !minutesInput) {
                                console.error("Missing input elements: startTime, endTime, hours, or minutes");
                                return;
                            }

                            const startTime = startTimeInput.value.trim();
                            const endTime = endTimeInput.value.trim();

                            if (!startTime || !endTime) {
                                console.error("Please enter both start and end times");
                                return;
                            }
                            if(startTime > endTime){
                                alert(`وقت البدأ ${startTime} يجب ان يكون قبل تاريخ النهاية${endTime}`);
                                return;
                            }

                            // Validate time format (optional)
                            // You can add a regular expression or a library to validate time format (HH:MM)

                            // Parse string times into Date objects
                            const startDate = new Date(`1970-01-01T${startTime}:00`);
                            const endDate = new Date(`1970-01-01T${endTime}:00`);

                            // Calculate time difference in milliseconds
                            const timeDiff = endDate.getTime() - startDate.getTime();

                            // Calculate hours and minutes
                            const hours = Math.floor(timeDiff / (1000 * 60 * 60));
                            const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));
                            if (minutes == 0) {
                            hoursInput.value = hours;
                            }
                            // Update hours and minutes input fields
                            hoursInput.value = hours ;
                            console.log(hours);
                            minutesInput.value = hours * 60 + minutes; // Ensure two-digit format
                        }

                        // Add event listener to a button or on change event of time inputs
                        const calculateButton = document.getElementById("calculateButton");
                        const startTimeInput = document.getElementById("startTime");
                        const endTimeInput = document.getElementById("endTime");

                        if (calculateButton) {
                            calculateButton.addEventListener("click", calculateTimeDifference);
                        } else {
                            startTimeInput.addEventListener("change", calculateTimeDifference);
                            endTimeInput.addEventListener("change", calculateTimeDifference);
                        }
                        //===========================================================================================
                        const checkBox = document.getElementById("myCheckbox");
                        const nFromTime = document.getElementById("nFromTime");
                        const nToTime = document.getElementById("nToTime");
                        const nhours = document.getElementById("nHours");
                        const flexa = document.getElementById("flexbleCheckbox");
                        const attendanceCheckbox = document.getElementById("AttendanceCheckbox");
                        const earlyattendance = document.getElementById("earlyAttendance");
                        const lateattendance = document.getElementById("lateAttendance");
                        const hoursInput1 = document.getElementById("nnHours");

                        // Initial state (hide form if checkbox is unchecked)
                        if (!checkBox.checked || !flexa.checked || !attendanceCheckbox.checked) {
                            nFromTime.style = `pointer-events: none; filter: none; opacity: .5;`; // Display form
                            nToTime.style = `pointer-events: none; filter: none; opacity: .5;`; // Display form
                            nhours.style = `pointer-events: none; filter: none; opacity: .5;`; // Display form
                            earlyattendance.style = `pointer-events: none; filter: none; opacity: .5;`; // Display form
                            lateattendance.style = `pointer-events: none; filter: none; opacity: .5;`; // Display form
                        }


                        checkBox.addEventListener("change", function () {
                            if (checkBox.checked) {
                                nFromTime.style = `pointer-events:all ; filter: none; opacity: 1;`; // Hide form
                                nToTime.style = `pointer-events: all; filter: none; opacity: 1;`; // Hide form
                                nhours.style = `pointer-events: all; filter: none; opacity: 1;`; // Hide form


                                flexa.checked = false;
                                //============================================
                            } else {
                                nFromTime.style = `pointer-events: none; filter: none; opacity: .5;`; // Display form
                                nToTime.style = `pointer-events: none; filter: none; opacity: .5;`; // Display form
                                nhours.style = `pointer-events: none; filter: none; opacity: .5;`; // Display form

                            }
                        });
                        flexa.addEventListener("change", function () {
                            if (flexa.checked) {
                                nFromTime.style = `pointer-events:all ; filter: none; opacity: 1;`; // Hide form
                                nToTime.style = `pointer-events: all; filter: none; opacity: 1;`; // Hide form
                                nhours.style = `pointer-events: all; filter: none; opacity: 1;`; // Hide form
                                hoursInput1.style = `background-color: #00000005;cursor:context-menu;`;


                                checkBox.checked = false;
                            } else {
                                nFromTime.style = `pointer-events: none; filter: none; opacity: .5;`; // Display form
                                nToTime.style = `pointer-events: none; filter: none; opacity: .5;`; // Display form
                                nhours.style = `pointer-events: none; filter: none; opacity: .5;`; // Display form

                            }
                        });
                        attendanceCheckbox.addEventListener("change", function () {
                            if (attendanceCheckbox.checked) {
                                earlyattendance.style = `pointer-events:all ; filter: none; opacity: 1;`; // Hide form
                                lateattendance.style = `pointer-events: all; filter: none; opacity: 1;`; // Hide form
                            } else {
                                earlyattendance.style = `pointer-events: none; filter: none; opacity: .5;`; // Display form
                                lateattendance.style = `pointer-events: none; filter: none; opacity: .5;`; // Display form
                            }
                        });
                        function calculateTime() {
                            const startTimeInput = document.getElementById("nnFromTime");
                            const endTimeInput = document.getElementById("nnToTime");

                            if (!startTimeInput || !endTimeInput || !hoursInput1) {
                                console.error("Missing input elements: startTime, endTime or hours");
                                return;
                            }

                            const startTime = startTimeInput.value.trim();
                            const endTime = endTimeInput.value.trim();

                            if (!startTime || !endTime) {
                                console.error("Please enter both start and end times");
                                return;
                            }


                            // Validate time format (optional)
                            // You can add a regular expression or a library to validate time format (HH:MM)

                            // Parse string times into Date objects
                            const startDate = new Date(`1970-01-01T${startTime}:00`);
                            const endDate = new Date(`1970-01-02T${endTime}:00`);

                            // Calculate time difference in milliseconds
                            const timeDiff = endDate.getTime() - startDate.getTime();

                            // Calculate hours and minutes
                            const hours1 = Math.floor(timeDiff / (1000 * 60 * 60));
                            if(flex.checked && hours1 > 24){
                                    alert("يجب ان يكون الوقت اقل من 24");
                                    return;
                                
                            }
                            const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));
                            if (minutes == 0) {
                            hoursInput1.value = hours1;
                            console.log(hours1);
                            

                            }
                            else {
                                // Update hours and minutes input fields
                                 hoursInput1.value = (hours1 + ":" + minutes.toString().padStart(2, "0"));

                            }

                        }

                        // Add event listener to a button or on change event of time inputs
                        const calculateButton1 = document.getElementById("calculateButton");
                        const startTimeInput1 = document.getElementById("nnFromTime");
                        const endTimeInput1 = document.getElementById("nnToTime");

                        if (calculateButton1) {
                            calculateButton1.addEventListener("click", calculateTime);
                        } else {
                            startTimeInput1.addEventListener("change", calculateTime);
                            endTimeInput1.addEventListener("change", calculateTime);
                        }

                        //=================================================
                        
                        //=========================================================================================================
                        $(document).ready(function () {
                            let temporaryData = []; // Array to store temporary data

                            const open = document.getElementById("openForm");
                            const openFormButton = document.getElementById("openFormButton");
                            const form = document.getElementById("form");
                            const closeFormButton = document.getElementById("closeFormButton");
                            closeFormButton.addEventListener("click", function () {
                                open.style = `display:none;`;
                            });
                            openFormButton.addEventListener("click", function () {
                                open.style = `
                                                                                                            display:block;

                                                                                                            position: fixed;
                                                                                                                top: 0;
                                                                                                                left: 0;
                                                                                                                width: 100%;
                                                                                                                height: 100%;
                                                                                                                background-color: rgba(0, 0, 0, 0.5);
                                                                                                                backdrop-filter: blur(5px);
                                                                                                                z-index: 1051;`;

                                form.style = `
                                                                                                            width:90%;
                                                                                                            display:block;
                                                                                                            position: fixed;
                                                                                                                top: 50%;
                                                                                                                left: 50%;
                                                                                                                transform: translate(-50%, -50%);
                                                                                                                background-color: #fff;
                                                                                                                padding: 20px;
                                                                                                                border: 1px solid #ccc;
                                                                                                                border-radius: 5px;
                                                                                                                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
                                                                                                                                        z-index: 1050;
                                                                                                                opacity: 1; /* Initially hidden */
                                                                                                                transition: opacity 0.3s ease-in-out;`;
                            });
                            //=========================================
                            const table = document.getElementById("table");
                            $("#addButton").click(function () {

                                const newData = {
                                    // Add input field names and their corresponding values here
                                    fieldName1: $("#PeriodsName").val(),
                                    fieldName2: $("#startTime").val(),
                                    fieldName3: $("#endTime").val(),
                                    fieldName4: $("#saturday").val(),
                                    fieldName5: $("#sunday").val(),
                                    fieldName6: $("#monday").val(),
                                    fieldName7: $("#thursday").val(),
                                    fieldName8: $("#wednesday").val(),
                                    fieldName9: $("#tuesday").val(),
                                    fieldName10: $("#friday").val(),
                                    fieldName11: $("#hours").val(),
                                    fieldName12: $("#minutes").val(),

                                    // ... add more fields as needed
                                };
                                if (
                                    !newData.fieldName1 ||
                                    !newData.fieldName2 ||
                                    !newData.fieldName3
                                ) {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'يرجى إداخال الحقول المطلوبة',
                                        customClass: {
                                            confirmButton: 'btn btn-primary'
                                        },
                                        buttonsStyling: false
                                    });
                                } else {
                                    table.style = `display:block;`;


                                   

                                    temporaryData.push(newData); // Add data to temporary array

                                    $("#temporaryTable").append(`
                                                                                <tr>
                                                                                <td>${newData.fieldName1}</td>
                                                                                <td>${newData.fieldName2}</td>
                                                                                <td>${newData.fieldName3}</td>
                                                                                <td>${newData.fieldName4}</td>
                                                                                <td>${newData.fieldName5}</td>
                                                                                <td>${newData.fieldName6}</td>
                                                                                <td>${newData.fieldName7}</td>
                                                                                <td>${newData.fieldName8}</td>
                                                                                <td>${newData.fieldName9}</td>
                                                                                <td>${newData.fieldName10}</td>
                                                                                <td>${newData.fieldName11}</td>
                                                                                <td>${newData.fieldName12}</td>
                                                                                <td><button class="removeButton btn btn-danger" >إزالة</button></td>
                                                                                </tr>
                                                                            `);
                                    // Clear input fields

                                    $("#PeriodsName").val("");
                                    $("#startTime").val("");
                                    $("#endTime").val("");
                                    $("#saturday").val("");
                                    $("#sunday").val("");
                                    $("#monday").val("");
                                    $("#thursday").val("");
                                    $("#wednesday").val("");
                                    $("#tuesday").val("");
                                    $("#friday").val("");
                                    $("#hours").val("");
                                    $("#minutes").val("");
                                    // ... clear other input fields

                                    // Disable submit button if no data (optional)
                                    $("#submitButton").prop("disabled", temporaryData.length === 0);
                                }
                            });
                        });
                        $(document).on("click", ".removeButton", function () {
                            const index = $(this).closest("tr").index();
                            temporaryData.splice(index, 1);
                            $(this).closest("tr").remove();

                            // Update submit button state (optional)
                            $("#submitButton").prop("disabled", temporaryData.length === 0);
                        });

                        $("#submitButton").click(function () {
                    const periodsInput=document.getElementById("PeriodsName");
                            const periodPermanenceModelsId = document.getElementById("periodPermanenceModelsId");
                            if (!periodsInput.value) {
                                event.preventDefault(); // Prevent form submission

                                Swal.fire({

                                    icon: 'error',
                                    title: 'يرجى إدخال الفترة',
                                    customClass: {
                                        confirmButton: 'btn btn-primary'
                                    },
                                    buttonsStyling: false
                                }); 
                            }
                            if (periodPermanenceModelsId.value == "") {
                                event.preventDefault(); // Prevent form submission

                                Swal.fire({

                                    icon: 'error',
                                    title: 'يرجى إختيار الدوام',
                                    customClass: {
                                        confirmButton: 'btn btn-primary'
                                    },
                                    buttonsStyling: false
                                });
                            }
                            // // Send data to server using AJAX or other methods
                            // console.log("Temporary Data:", temporaryData); // Simulate sending to server
                            $("#submitButton").val( JSON.stringify(temporaryData));
                            // Clear temporary data and table after submission (optional)
                            temporaryData = [];
                            $("#temporaryTable").empty();
                            $("#submitButton").prop("disabled", true);
                        });

                    </script>


                }
